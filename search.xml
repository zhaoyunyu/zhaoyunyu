<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Net6项目发布至阿里云镜像</title>
      <link href="/2023/05/02/Node/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/"/>
      <url>/2023/05/02/Node/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="创建发布"><a href="#创建发布" class="headerlink" title="创建发布"></a>创建发布</h1><p><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713211410187.png" alt="image-20220713211410187"></p><h1 id="依次点击"><a href="#依次点击" class="headerlink" title="依次点击"></a>依次点击</h1><blockquote><p>发布 -&gt; 新建 -&gt; Doker容器注册表 -&gt; 下一步</p></blockquote><p><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713211632985.png" alt="image-20220713211632985"></p><h1 id="其他Docker容器注册表-gt-下一步"><a href="#其他Docker容器注册表-gt-下一步" class="headerlink" title="其他Docker容器注册表 -&gt; 下一步"></a>其他Docker容器注册表 -&gt; 下一步</h1><p><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713211741404.png" alt="image-20220713211741404"></p><h1 id="填写注册信息"><a href="#填写注册信息" class="headerlink" title="填写注册信息"></a>填写注册信息</h1><p><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713211815865.png" alt="image-20220713211815865"></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h2><h3 id="注册表信息"><a href="#注册表信息" class="headerlink" title="注册表信息"></a>注册表信息</h3><blockquote><p>实例公网地址&#x2F;空间名称</p></blockquote><ul><li><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713211935711.png" alt="image-20220713211935711"></li><li><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713212011272.png" alt="image-20220713212011272"></li></ul><p>​</p><h3 id="用户名"><a href="#用户名" class="headerlink" title="用户名"></a>用户名</h3><blockquote><p> 右上角头像会出现信息</p></blockquote><ul><li><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713212045462.png" alt="image-20220713212045462"></li></ul><h3 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h3><blockquote><p>密码为开通服务时设置的密码</p></blockquote><ul><li>也可以在凭证中修改</li><li><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713212141809.png" alt="image-20220713212141809"></li></ul><p>​</p><h1 id="编辑镜像标签"><a href="#编辑镜像标签" class="headerlink" title="编辑镜像标签"></a>编辑镜像标签</h1><blockquote><p>自动生成 或者 自定义(自定义为当前时间)</p></blockquote><p><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713212339012.png" alt="image-20220713212339012"></p><h1 id="点击发布"><a href="#点击发布" class="headerlink" title="点击发布"></a>点击发布</h1><p><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713212433264.png" alt="image-20220713212433264"></p><h1 id="成功提示"><a href="#成功提示" class="headerlink" title="成功提示"></a>成功提示</h1><p><img src="/../../images/dotnet6%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713212530419.png" alt="image-20220713212530419"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> .net </category>
          
          <category> 阿里云 </category>
          
          <category> 阿里docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> .net </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu修改ip地址</title>
      <link href="/2023/05/02/Node/ubuntu%E4%BF%AE%E6%94%B9ip%E5%9C%B0%E5%9D%80/"/>
      <url>/2023/05/02/Node/ubuntu%E4%BF%AE%E6%94%B9ip%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu修改ip地址"><a href="#ubuntu修改ip地址" class="headerlink" title="ubuntu修改ip地址"></a>ubuntu修改ip地址</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/netplan/00-installer-config.yaml</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 修改以下内容 ##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#########################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This is the network config written by <span class="string">&#x27;subiquity&#x27;</span></span></span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens160:</span><br><span class="line">        addresses: [192.168.33.117/24]</span><br><span class="line">        dhcp4: false</span><br><span class="line">        optional: true</span><br><span class="line">        gateway4: 192.168.33.1</span><br><span class="line">        # dhcp4: true</span><br><span class="line">        nameservers:</span><br><span class="line">                addresses: [192.168.33.1,114.114.114.114]</span><br><span class="line"></span><br><span class="line">  version: 2</span><br></pre></td></tr></table></figure><blockquote><p>修改完成后，保存退出，然后输入命令重启网卡</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netplan apply</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改主机名</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hostnamectl --static set-hostname docker</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改网络信息</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nano /etc/sysconfig/network-scripts/ifcfg-ens192</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改 root 用户的密码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">passwd root</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">完成以上操作后，重启系统即可</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# smtp邮件发送测试</title>
      <link href="/2023/05/02/Node/smtp%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/05/02/Node/smtp%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[ <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> 通过客户端发送邮件信息（如果发件人使用QQ邮箱，那么对应的smtpService需改成smtp.qq.com）</span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> 前提：发件人需要到邮箱中启用第三方客户端服务，位置：设置<span class="doctag">--&gt;</span>账户<span class="doctag">--&gt;</span>POP3/SMTP服务 <span class="doctag">--&gt;</span>开启，获取邮箱授权码</span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;senderEmail&quot;&gt;</span>发件人邮箱<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;authCode&quot;&gt;</span>发件人邮箱授权码<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;receiverEmail&quot;&gt;</span>收件人邮箱<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;emailTitle&quot;&gt;</span>邮件标题<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;emailContent&quot;&gt;</span>邮件内容<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;smtpService&quot;&gt;</span>邮件服务名：smtp.qq.com <span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SendEmailBySMTP</span>(<span class="params"><span class="built_in">string</span> senderEmail, <span class="built_in">string</span> authCode, <span class="built_in">string</span> receiverEmail, <span class="built_in">string</span> emailTitle, <span class="built_in">string</span> emailContent, <span class="built_in">string</span> smtpService</span>)</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="comment">//实例化一个发送邮件类</span></span><br><span class="line">         MailMessage mailMsg = <span class="keyword">new</span> MailMessage();</span><br><span class="line">         <span class="comment">//发件人邮箱地址</span></span><br><span class="line">         mailMsg.From = <span class="keyword">new</span> MailAddress(senderEmail);</span><br><span class="line">         <span class="comment">//收件人邮箱地址</span></span><br><span class="line">         mailMsg.To.Add(<span class="keyword">new</span> MailAddress(receiverEmail));</span><br><span class="line">         <span class="comment">//邮件标题的编码格式</span></span><br><span class="line">         mailMsg.SubjectEncoding = Encoding.UTF8;</span><br><span class="line">         <span class="comment">//邮件标题</span></span><br><span class="line">         mailMsg.Subject = emailTitle;</span><br><span class="line">         <span class="comment">//邮件内容的编码格式</span></span><br><span class="line">         mailMsg.BodyEncoding = Encoding.UTF8;</span><br><span class="line">         <span class="comment">//邮件内容</span></span><br><span class="line">         mailMsg.Body = emailContent;</span><br><span class="line">         <span class="comment">//是否是html邮件</span></span><br><span class="line">         mailMsg.IsBodyHtml = <span class="literal">true</span>;</span><br><span class="line">         <span class="comment">//邮件优先级</span></span><br><span class="line">         mailMsg.Priority = MailPriority.High;</span><br><span class="line">         <span class="comment">//实例化一个SmtpClient类</span></span><br><span class="line">         SmtpClient client = <span class="keyword">new</span> SmtpClient();</span><br><span class="line">         <span class="comment">//设置邮件服务名，这里使用的是QQ邮箱，所以是smtp.qq.com, 若使用163邮箱，则是 smtp.163.com</span></span><br><span class="line">         client.Host = smtpService;</span><br><span class="line">         <span class="comment">//设置邮件端口</span></span><br><span class="line">         client.Port = <span class="number">25</span>;</span><br><span class="line">         <span class="comment">//使用安全加密连接</span></span><br><span class="line">         client.EnableSsl = <span class="literal">true</span>;</span><br><span class="line">         <span class="comment">//不和请求一块发送</span></span><br><span class="line">         client.UseDefaultCredentials = <span class="literal">false</span>;</span><br><span class="line">         <span class="comment">//验证发件人身份（发件人邮箱，邮箱生成的授权码）</span></span><br><span class="line">         client.Credentials = <span class="keyword">new</span> NetworkCredential(senderEmail, authCode);</span><br><span class="line">         <span class="comment">//发送</span></span><br><span class="line">         client.Send(mailMsg);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> smtp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> smtp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用阿里云创建镜像存储</title>
      <link href="/2023/05/02/Node/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/"/>
      <url>/2023/05/02/Node/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>进入主页：<a href="https://cr.console.aliyun.com/">容器镜像服务</a></p><p>参考文档：<a href="https://blog.csdn.net/nuptaxin/article/details/124008353">https://blog.csdn.net/nuptaxin/article/details/124008353</a></p><h2 id="选择个人实例"><a href="#选择个人实例" class="headerlink" title="选择个人实例"></a>选择个人实例</h2><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713115704133.png" alt="image-20220713115704133"></p><h2 id="创建个人版"><a href="#创建个人版" class="headerlink" title="创建个人版"></a>创建个人版</h2><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713115728850.png" alt="image-20220713115728850"></p><h2 id="创建完成，点击设置Registry登录密码"><a href="#创建完成，点击设置Registry登录密码" class="headerlink" title="创建完成，点击设置Registry登录密码"></a>创建完成，点击设置Registry登录密码</h2><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713115814538.png" alt="image-20220713115814538"></p><h2 id="创建命名空间-全网唯一"><a href="#创建命名空间-全网唯一" class="headerlink" title="创建命名空间(全网唯一)"></a>创建<a href="https://so.csdn.net/so/search?q=%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4&spm=1001.2101.3001.7020">命名空间</a>(全网唯一)</h2><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713115835118.png" alt="image-20220713115835118"></p><h2 id="创建镜像仓库"><a href="#创建镜像仓库" class="headerlink" title="创建镜像仓库"></a>创建镜像仓库</h2><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713115850609.png" alt="image-20220713115850609"></p><h2 id="选择本地仓库"><a href="#选择本地仓库" class="headerlink" title="选择本地仓库"></a>选择本地仓库</h2><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713115913573.png" alt="image-20220713115913573"></p><h2 id="创建成功"><a href="#创建成功" class="headerlink" title="创建成功"></a>创建成功</h2><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713115946575.png" alt="image-20220713115946575"></p><h1 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h1><blockquote><p>参考仓储基本信息中操作指南</p></blockquote><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login --username=ailithemonster registry.cn-hangzhou.aliyuncs.com</span><br></pre></td></tr></table></figure><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713120047109.png" alt="image-20220713120047109"></p><h3 id="推送-1"><a href="#推送-1" class="headerlink" title="推送"></a>推送</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/thmonster/thmonster_box:[镜像版本号]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker push registry.cn-hangzhou.aliyuncs.com/thmonster/thmonster_box:[镜像版本号]</span></span><br></pre></td></tr></table></figure><blockquote><p>[镜像版本号] – 自定义一个名称</p></blockquote><h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><ul><li>私有仓储拉取前需要登录</li><li>[镜像版本号] – 可以在镜像版本中查看</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull registry.cn-hangzhou.aliyuncs.com/thmonster/thmonster_box:[镜像版本号]</span> </span><br></pre></td></tr></table></figure><p><img src="/../../images/%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F%E5%AD%98%E5%82%A8/image-20220713134401487.png" alt="image-20220713134401487"></p><h1 id="The-End"><a href="#The-End" class="headerlink" title="The End."></a>The End.</h1>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> docker </category>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-rootless</title>
      <link href="/2023/05/02/Node/docker-rootless/"/>
      <url>/2023/05/02/Node/docker-rootless/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p>blog: <a href="https://www.cnblogs.com/cocoalatte/p/15919366.html">https://www.cnblogs.com/cocoalatte/p/15919366.html</a></p><p>zhihu:  <a href="https://zhuanlan.zhihu.com/p/496021016">https://zhuanlan.zhihu.com/p/496021016</a></p></blockquote><h1 id="前景提要"><a href="#前景提要" class="headerlink" title="前景提要"></a>前景提要</h1><blockquote><p>客户要求进程不要使用root用户，好在咱们的东西都跑在docker上，这样岂不是建个用户加个权限启动docker就解决了么，但是经过了解，docker的非root用户模式还有点费劲，所以记录一下</p></blockquote><hr><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><ol><li>使用<code>管理员</code> 创建一个名为<code>dockeruser</code> 的用户</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line">sudo useradd dockeruser -d /home/dockeruser -m</span><br></pre></td></tr></table></figure><ol start="2"><li><code>管理员</code>配置密码</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd dockeruser</span><br></pre></td></tr></table></figure><ol start="3"><li><code>管理员</code>解决远程登录</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/passwd</span><br></pre></td></tr></table></figure><blockquote><p>修改以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dockeruser:x:1001:1001::/home/dockeruser:/bin/sh</span><br><span class="line"># 替换为 ↓↓↓↓↓↓↓</span><br><span class="line">dockeruser:x:1001:1001::/home/dockeruser:/bin/bash</span><br></pre></td></tr></table></figure></blockquote><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li><code>管理员</code>安装rootless的必备组件： <code>newuidmap</code>  和  <code>newgidmap</code> ，复制以下命令并执行：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -eux &lt;&lt;EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Install newuidmap &amp; newgidmap binaries</span></span><br><span class="line">apt-get install -y uidmap</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ol start="2"><li>登录<code>dockeruser</code>用户</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh dockeruser@localhost</span><br></pre></td></tr></table></figure><blockquote><ol><li>要么通过系统登录界面，要么ssh登录</li><li>不能使用su 方式切换到rootless用户,不然后面会提示检测不到systemd, 导致dockerd不能被systemd管理, 只能使用dockerd-rootless.sh脚本管理dockerd</li><li>·    <a href="https://link.zhihu.com/?target=https://www.redhat.com/sysadmin/sudo-rootless-podman">There’s no login session</a></li></ol></blockquote><ol start="3"><li><code>管理员</code>  复制并执行</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/rootless | sh</span><br></pre></td></tr></table></figure><h1 id="成功提示"><a href="#成功提示" class="headerlink" title="成功提示"></a>成功提示</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Installed docker.service successfully.</span><br><span class="line">[INFO] To control docker.service, run: `systemctl --user (start|stop|restart) docker.service`</span><br><span class="line">[INFO] To run docker.service on system startup, run: `sudo loginctl enable-linger dockeruser`</span><br><span class="line"> </span><br><span class="line">[INFO] Creating CLI context &quot;rootless&quot;</span><br><span class="line">Successfully created context &quot;rootless&quot;</span><br><span class="line"> </span><br><span class="line">[INFO] Make sure the following environment variables are set (or add them to ~/.bashrc):</span><br><span class="line"> </span><br><span class="line">export PATH=/usr/bin:$PATH</span><br><span class="line">export DOCKER_HOST=unix:///run/user/1001/docker.sock</span><br></pre></td></tr></table></figure><h1 id="将docker-sock添加到环境变量"><a href="#将docker-sock添加到环境变量" class="headerlink" title="将docker.sock添加到环境变量"></a>将docker.sock添加到环境变量</h1><ol><li><code>dockeruser</code>复制并执行:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.bashrc </span><br></pre></td></tr></table></figure><blockquote><p><code>dockeruser</code>添加以下内容<code>(</code>根据安装成功后的提示添加，参考成功提示10,11行)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="built_in">export</span> PATH=/usr/bin:<span class="variable">$PATH</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="built_in">export</span> DOCKER_HOST=unix:///run/user/1001/docker.sock</span></span><br></pre></td></tr></table></figure></blockquote><ol start="2"><li>添加完以后使用<code>source ~/.bashrc</code> 命令使环境变量生效。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h1 id="使用systemctl启动服务"><a href="#使用systemctl启动服务" class="headerlink" title="使用systemctl启动服务"></a>使用systemctl启动服务</h1><ol><li>使用<code>dockeruser</code> 执行</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl --user start docker</span><br></pre></td></tr></table></figure><ul><li>user 使用当前用户管理服务</li></ul><ol start="2"><li><code>dockeruser</code>设置开始自启(不设置指定用户退出后，服务将停止)</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loginctl enable-linger dockeruser</span><br></pre></td></tr></table></figure><h1 id="rootless使用国内仓库"><a href="#rootless使用国内仓库" class="headerlink" title="rootless使用国内仓库"></a>rootless使用国内仓库</h1><blockquote><p>rootless 与docker不同，docker在 <code>/etc/docker/daemon.json</code></p><p>rootless 在 <code>~/.config/docker/daemon.json</code></p></blockquote><ol><li>使用 <code>dockeruser</code> 编辑，复制并执行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.config/docker/daemon.json</span><br></pre></td></tr></table></figure><ol start="2"><li>填写以下内容</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;,&quot;https://registry.docker-cn.com&quot;,&quot;https://3laho3y3.mirror.aliyuncs.com&quot;,&quot;http://f1361db2.m.daocloud.io&quot;,&quot;http://f1361db2.m.daocloud.io&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>重启服务</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl --user restart docker</span><br></pre></td></tr></table></figure><ol start="4"><li><code>docker info</code>  查看详情</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> docker </category>
          
          <category> rooless </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> docker </tag>
            
            <tag> rootless </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker和docker-dompose安装</title>
      <link href="/2023/05/02/Node/Docker%E5%92%8CDocker-compose%E5%AE%89%E8%A3%85/"/>
      <url>/2023/05/02/Node/Docker%E5%92%8CDocker-compose%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h1><p>​安装Docker：新装的Ubuntu系统，需要安装Docker之后，才能使用Dockerfile，已经安装Docker的系统可跳过该步。</p><p>Docker安装参考步骤：<a href="https://developer.aliyun.com/article/762674">https://developer.aliyun.com/article/762674</a></p><p>​*备注：Docker安装后，一般需要管理员权限，因此运行Docker命令需要加sudo，也可以根据文章的说明修改为非管理员权限运行Docker。</p><p>Docker主要安装过程，依次键入以下命令，并等待安装结束：</p><ol><li>首先，更新软件包索引，并且安装必要的依赖软件，来添加一个新的 HTTPS 软件源：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br></pre></td></tr></table></figure><ol start="2"><li>使用下面的 curl 导入源仓库的 GPG key：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><ol start="3"><li>将 Docker APT 软件源添加到你的系统：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure><ol start="4"><li>现在，Docker 软件源被启用了，你可以安装软件源中任何可用的 Docker 版本。</li></ol><p>安装 Docker 最新版本，运行下面的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h1 id="docker-compose-安装"><a href="#docker-compose-安装" class="headerlink" title="docker-compose 安装"></a>docker-compose 安装</h1><h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法 - 1"></a>方法 - 1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install docker-compress</span><br></pre></td></tr></table></figure><h2 id="方法-2"><a href="#方法-2" class="headerlink" title="方法 - 2"></a>方法 - 2</h2><ol><li>拉取</li></ol><p>tips：v2.9.0 为版本，可能会失效，以git官网为准。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/v2.9.0/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><ol start="2"><li>添加权限</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h1 id="The-End"><a href="#The-End" class="headerlink" title="The End."></a>The End.</h1>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> docker </category>
          
          <category> docker-compose </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EF提升效率，Z. EntityFramework</title>
      <link href="/2022/05/15/Node/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/"/>
      <url>/2022/05/15/Node/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/</url>
      
        <content type="html"><![CDATA[<h1 id="EF大数据批量处理-效率提升"><a href="#EF大数据批量处理-效率提升" class="headerlink" title="EF大数据批量处理-效率提升"></a>EF大数据批量处理-效率提升</h1><p>使用Nuget安装：<code>Z.EntityFramework.Extensions</code></p><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><h3 id="脱壳"><a href="#脱壳" class="headerlink" title="脱壳"></a>脱壳</h3><ol><li><p>找到 <code>Z.EntityFramework.Extensions.EFCore</code> 的Nuget包地址（右键属性可以查看），我的在 <code>C:\Users\Administrator\.nuget\packages\z.entityframework.extensions.efcore\2.6.11\lib\netstandard2.0</code> </p></li><li><p>下载de4dot:<a href="https://github.com/0xd4d/de4dot">https://github.com/0xd4d/de4dot</a> （文件脱壳）<br>windows下载地址：<a href="https://ci.appveyor.com/project/0xd4d/de4dot/branch/master/artifacts">https://ci.appveyor.com/project/0xd4d/de4dot/branch/master/artifacts</a><br>下载：de4dot-net35</p></li><li><p>解压后将 <code>Z.EntityFramework.Extensions.EFCore.dll</code> 拷贝到 <code>de4dot-net35</code> 解压目录，然后执行cmd命令</p><p><code>de4dot.exe Z.EntityFramework.Extensions.EFCore.dll</code></p></li></ol><p>它会在当前dll位置在生成一个 <code>Z.EntityFramework.Extensions.EFCore-cleaned.dll</code> 也就是格式化之后的dll</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\de4dot-net35&gt;de4dot.exe Z.EntityFramework.Extensions.EFCore.dll</span><br><span class="line"></span><br><span class="line">de4dot v3<span class="number">.1</span><span class="number">.41592</span><span class="number">.3405</span> Copyright (C) <span class="number">2011</span><span class="number">-2015</span> de4dot@gmail.com</span><br><span class="line">Latest version and source code: https:<span class="comment">//github.com/0xd4d/de4dot</span></span><br><span class="line"></span><br><span class="line">Detected Unknown Obfuscator (C:\Users\Administrator\Desktop\de4dot-net35\Z.EntityFramework.Extensions.EFCore.dll)</span><br><span class="line">Cleaning C:\Users\Administrator\Desktop\de4dot-net35\Z.EntityFramework.Extensions.EFCore.dll</span><br><span class="line">Renaming all obfuscated symbols</span><br><span class="line">Saving C:\Users\Administrator\Desktop\de4dot-net35\Z.EntityFramework.Extensions.EFCore-cleaned.dll</span><br></pre></td></tr></table></figure><h3 id="使用dnSpy修改程序集"><a href="#使用dnSpy修改程序集" class="headerlink" title="使用dnSpy修改程序集"></a>使用dnSpy修改程序集</h3><ol><li><p>下载dnSpy：<a href="https://github.com/0xd4d/dnSpy/releases">https://github.com/0xd4d/dnSpy/releases</a><br>下载：dnSpy-netcore-win64.zip </p></li><li><p>运行 <code>dnSpy.exe</code> ，并打开 <code>Z.EntityFramework.Extensions.EFCore-cleaned.dll</code> </p></li><li><p>按 <code>Ctrl+Shift+K</code> 查找 <code>ValidateLicense</code></p><p><img src="/../../images/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/image-001.png" alt="image-001"></p><p>选择第一个 <code>ValidateLicense</code> 双击，然后点击内部的 <code>LicenseManager.ValidateLicense</code> ，然后继续点击内部的 <code>LicenseManager.ValidateLicense</code></p></li></ol><p><img src="/../../images/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/image-002.png" alt="image-002"></p><p>然后点击 <code>Class278.smethod_10</code> </p><p><img src="/../../images/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/image-003.png" alt="image-003"></p><p>然后点击 <code>Class278.smethod_11</code> </p><p><img src="/../../images/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/image-004.png" alt="image-004"></p><p>然后点击 <code>Class278.smethod_7</code> </p><p><img src="/../../images/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/image-005.png" alt="image-005"></p><p>最终找到时间判断</p><p><img src="/../../images/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/image-006.png" alt="image-006"></p><p>保存</p><p><img src="/../../images/EF%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86-%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/image-007.png" alt="image-007"></p><ol start="4"><li>重命名，然后项目直接添加引用即可</li></ol><blockquote><p>以上修改方法，根据版本迭代修改方法略有不同。</p><p>附上已经修改文件：</p></blockquote><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end."></a>The end.</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Z. EntityFramework </category>
          
          <category> 反编译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Z. EntityFramework </tag>
            
            <tag> EntityFramework </tag>
            
            <tag> 反编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Iptable 详解！</title>
      <link href="/2022/05/15/Node/Iptable/"/>
      <url>/2022/05/15/Node/Iptable/</url>
      
        <content type="html"><![CDATA[<h1 id="Iptable"><a href="#Iptable" class="headerlink" title="Iptable"></a>Iptable</h1><blockquote><p>iptables  [-t table]  [COMMAND]  [chain]  [CONDITION]  [-j ACTION]</p><p>iptables  [-t 表名]  [命令选项]［链名条件匹配］ ［-j 目标动作或跳转］</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-t table   是指<span class="string">&#x27;操作的表&#x27;</span>,filter、nat、mangle或raw,<span class="string">&#x27;默认使用filter&#x27;</span></span><br><span class="line"></span><br><span class="line">COMMAND    <span class="string">&#x27;子命令&#x27;</span>,定义<span class="string">&#x27;对规则的管理&#x27;</span>,PREROUTING、POSTROUTING、OUTPUT</span><br><span class="line"></span><br><span class="line">chain      指明<span class="string">&#x27;链路&#x27;</span></span><br><span class="line"></span><br><span class="line">CONDITION  匹配的<span class="string">&#x27;条件或标准&#x27;</span>,用于指定对符合什么样 条件的数据包进行处理；</span><br><span class="line"></span><br><span class="line">ACTION     匹配后<span class="string">&#x27;操作动作&#x27;</span>,用于指定数据包的处理方式（比如允许通过、拒绝、丢弃、跳转（Jump）给其它链处理。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="t-table"><a href="#t-table" class="headerlink" title="-t   table"></a><strong>-t   table</strong></h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#----------------------------</span></span><br><span class="line">规则表：</span><br><span class="line">    <span class="number">1</span>）filter表——三个链：INPUT、FORWARD、OUTPUT</span><br><span class="line">作用：过滤数据包 内核模块：iptables_filter.</span><br><span class="line">    <span class="number">2</span>）Nat表——三个链：PREROUTING、POSTROUTING、OUTPUT</span><br><span class="line">作用：用于网络地址转换（IP、端口） 内核模块：iptable_nat</span><br><span class="line">    <span class="number">3</span>）Mangle表——五个链：PREROUTING、POSTROUTING、INPUT、OUTPUT、FORWARD</span><br><span class="line">作用：修改数据包的服务类型、TTL、并且可以配置路由实现QOS内核模块：iptable_mangle(别看这个表这么麻烦，</span><br><span class="line">咱们设置策略时几乎都不会用到它)</span><br><span class="line">   <span class="number">4</span>）Raw表——两个链：OUTPUT、PREROUTING</span><br><span class="line"><span class="meta">#-----------------------------</span></span><br><span class="line">规则链：</span><br><span class="line">   <span class="number">1</span>）INPUT——进来的数据包应用此规则链中的策略</span><br><span class="line">   <span class="number">2</span>）OUTPUT——外出的数据包应用此规则链中的策略</span><br><span class="line">   <span class="number">3</span>）FORWARD——转发数据包时应用此规则链中的策略</span><br><span class="line">   <span class="number">4</span>）PREROUTING——对数据包作路由选择前应用此链中的规则</span><br><span class="line">（记住！所有的数据包进来的时侯都先由这个链处理）</span><br><span class="line">   <span class="number">5</span>）POSTROUTING——对数据包作路由选择后应用此链中的规则</span><br><span class="line">（所有的数据包出来的时侯都先由这个链处理）</span><br></pre></td></tr></table></figure><h2 id="iptables命令的管理控制选项"><a href="#iptables命令的管理控制选项" class="headerlink" title="iptables命令的管理控制选项"></a><strong>iptables命令的管理控制选项</strong></h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-A 在指定链的末尾添加（append）一条新的规则</span><br><span class="line">-D 删除（delete）指定链中的某一条规则，可以按规则序号和内容删除</span><br><span class="line">-I 在指定链中插入（insert）一条新的规则，默认在第一行添加</span><br><span class="line">-R 修改、替换（replace）指定链中的某一条规则，可以按规则序号和内容替换</span><br><span class="line">-L 列出（list）指定链中所有的规则进行查看（默认是filter表，如果列出nat表的规则需要添加-t，即iptables -t nat -L）</span><br><span class="line">-E 重命名用户定义的链，不改变链本身</span><br><span class="line">-F 清空（flush）</span><br><span class="line">-N 新建（<span class="keyword">new</span>-chain）一条用户自己定义的规则链</span><br><span class="line">-X 删除指定表中用户自定义的规则链（delete-chain）</span><br><span class="line">-P 设置指定链的默认策略（policy）</span><br><span class="line">-Z 将所有表的所有链的字节和数据包计数器清零</span><br><span class="line">-n 使用数字形式（numeric）显示输出结果</span><br><span class="line">-v 查看规则表详细信息（verbose）的信息</span><br><span class="line">-V 查看版本(version)</span><br><span class="line">-h 获取帮助（help）</span><br></pre></td></tr></table></figure><h2 id="在iptables中，’-j-参数’用来指定要’进行的处理动作’"><a href="#在iptables中，’-j-参数’用来指定要’进行的处理动作’" class="headerlink" title="在iptables中，’-j 参数’用来指定要’进行的处理动作’"></a><strong>在iptables中，’-j 参数’用来指定要’进行的处理动作’</strong></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">常用的<span class="string">&#x27;处理动作&#x27;</span>包括：</span><br><span class="line">      <span class="string">&#x27;ACCEPT&#x27;</span>、接受</span><br><span class="line">      <span class="string">&#x27;REJECT&#x27;</span>、明示拒绝</span><br><span class="line">      <span class="string">&#x27;DROP&#x27;</span>、悄悄丢弃</span><br><span class="line">      <span class="string">&#x27;REDIRECT&#x27;</span>、重定向：主要用于实现端口重定向</span><br><span class="line">      <span class="string">&#x27;MASQUERADE&#x27;</span>、源地址伪装</span><br><span class="line">      <span class="string">&#x27;LOG&#x27;</span>、</span><br><span class="line">      <span class="string">&#x27;DNAT&#x27;</span>、</span><br><span class="line">      <span class="string">&#x27;SNAT&#x27;</span>、</span><br><span class="line">      <span class="string">&#x27;MIRROR&#x27;</span>、</span><br><span class="line">      <span class="string">&#x27;QUEUE&#x27;</span>、</span><br><span class="line">      <span class="string">&#x27;RETURN&#x27;</span>、</span><br><span class="line">      <span class="string">&#x27;MARK&#x27;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">&#x27;一条链上有多个规则&#x27;</span> --&gt; <span class="string">&#x27;如果先匹配,后面的规则就不再处理&#x27;</span> --&gt; <span class="string">&#x27;跳转到下一个链条&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="用到的命令"><a href="#用到的命令" class="headerlink" title="用到的命令"></a><strong>用到的命令</strong></h2><blockquote><p>iptables [-t 表名] [命令选项] ［链名］［<a href="https://www.cnblogs.com/justdoit-qing/articles/3990911.html">条件匹配</a>］［-j 目标动作或跳转］</p><p>iptables [] [-A] [INPUT] [] [-j NFQUEUE –queue-num 1] #  -t table 默认为：filter</p></blockquote><blockquote><p><code>参数</code></p><p>iptables [-t nat] [-A] [PREROUTING] [-d <code>host</code> -p tcp –dport <code>dport</code>] [-j DNAT –to-destination <code>dest</code>]</p><p>iptables [-t nat] [-D] [POSTROUTING] [-d <code>deshost</code>  -p tcp –dport <code>desport</code>] [-j SNAT –to <code>host</code> ]</p></blockquote><h2 id="Info"><a href="#Info" class="headerlink" title="Info"></a><strong>Info</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># 命令选项</span><br><span class="line">-A 在指定链的末尾添加（append）一条新的规则</span><br><span class="line">-D 删除（delete）指定链中的某一条规则，可以按规则序号和内容删除</span><br><span class="line"># 链名</span><br><span class="line">PREROUTING——对数据包作路由选择前应用此链中的规则（记住！所有的数据包进来的时侯都先由这个链处理）</span><br><span class="line">POSTROUTING——对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）</span><br><span class="line"># 条件匹配</span><br><span class="line"> <span class="number">1</span>、Match：-d, --dst, --destination</span><br><span class="line">    Examp：iptables -A INPUT 【-d <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>】</span><br><span class="line">    Exp：以IP目的地址匹配包。地址的形式和 -- source完全一样。</span><br><span class="line"> <span class="number">2</span>、Match：-p, --protocol </span><br><span class="line">    Examp：iptables -A INPUT 【-p tcp】</span><br><span class="line">    Exp：匹配指定的协议。指定协议的形式有以下几种：</span><br><span class="line">    <span class="number">1</span>、名字，不分大小写，但必须是在/etc/protocols中定义的。</span><br><span class="line">    <span class="number">2</span>、可以使用它们相应的整数值。例如，ICMP的值是<span class="number">1</span>，TCP是<span class="number">6</span>，UDP是<span class="number">17</span>。</span><br><span class="line">    <span class="number">3</span>、缺省设置，ALL，相应数值是<span class="number">0</span>，但要注意这只代表匹配TCP、UDP、ICMP，而不是/etc/protocols中定义的所有协议。</span><br><span class="line">    <span class="number">4</span>、可以是协议列表，以英文逗号为分隔符，如：udp,tcp</span><br><span class="line">    <span class="number">5</span>、可以在协议前加英文的感叹号表示取反，注意有空格，如: --protocol ! tcp 表示非tcp协议，也就是UDP和ICMP。可以看出这个取反的范围只是TCP、UDP和ICMP。</span><br><span class="line"> <span class="number">3</span>、Matc：--dport, --destination-port</span><br><span class="line">  Examp：iptables -A INPUT -p tcp 【--dport <span class="number">22</span>】</span><br><span class="line">    Exp：基于TCP包的目的端口来匹配包，端口的指定形式和--sport完全一样。</span><br><span class="line"># 目标动作</span><br><span class="line"><span class="number">1</span>、Option：--to-destination</span><br><span class="line">Examp：iptables -t nat -A PREROUTING -p tcp -d <span class="number">15.45</span><span class="number">.23</span><span class="number">.67</span> --dport <span class="number">80</span> -j DNAT 【--to-destination <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>-<span class="number">192.168</span><span class="number">.1</span><span class="number">.10</span>】</span><br><span class="line">Exp：</span><br><span class="line">   指定要写入IP头的地址，这也是包要被转发到的地方。上面的例子就是把所有发往地址<span class="number">15.45</span><span class="number">.23</span><span class="number">.67</span>的包都转发到一段LAN使用的</span><br><span class="line">   私有地址中，即<span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>到 <span class="number">192.168</span><span class="number">.1</span><span class="number">.10</span>。如前所述，在这种情况下，每个流都会被随机分配一个要转发到的地址，但同一</span><br><span class="line">   个流总是使用同一个地址。我们也可以只指定一个IP地址作为参数，这样所有的包都被转发到同一台机子。我们还可以在地址后指</span><br><span class="line">   定一个或一个范围的端口。比如：--to-destination <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>:<span class="number">80</span>或 --to-destination <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>:<span class="number">80</span>-<span class="number">100</span>。SNAT的语</span><br><span class="line">   法和这个target的一样，只是目的不同罢了。要注意，只有先用--protocol指定了TCP或 UDP协议，才能使用端口。</span><br><span class="line"><span class="number">2</span>、Option：--to-source</span><br><span class="line">Examp：iptables -t nat -A POSTROUTING -p tcp -o eth0 -j SNAT 【--to-source <span class="number">194.236</span><span class="number">.50</span><span class="number">.155</span>-<span class="number">194.236</span><span class="number">.50</span><span class="number">.160</span>:<span class="number">1024</span>-<span class="number">32000</span>】</span><br><span class="line">Exp：</span><br><span class="line">    指定源地址和端口，有以下几种方式：</span><br><span class="line">    <span class="number">1</span>、单独的地址。</span><br><span class="line">    <span class="number">2</span>、一段连续的地址，用连字符分隔，如<span class="number">194.236</span><span class="number">.50</span><span class="number">.155</span>-<span class="number">194.236</span><span class="number">.50</span><span class="number">.160</span>，这样可以实现负载平衡。每个流会被随机分配一个IP，但对于同一个流使用的是同一个IP。</span><br><span class="line">    <span class="number">3</span>、在指定-p tcp 或 -p udp的前提下，可以指定源端口的范围，如<span class="number">194.236</span><span class="number">.50</span><span class="number">.155</span>:<span class="number">1024</span>-<span class="number">32000</span>，这样包的源端口就被限制在<span class="number">1024</span>-<span class="number">32000</span>了。</span><br><span class="line">    注意，如果可能，iptables总是想避免任何的端口变更，换句话说，它总是尽力使用建立连接时所用的端口。但是如果两台机子使用</span><br><span class="line">    相同的源端口，iptables 将会把他们的其中之一映射到另外的一个端口。如果没有指定端口范围， 所有的在<span class="number">512</span>以内的源端口会被</span><br><span class="line">    映射到<span class="number">512</span>以内的另一个端口，<span class="number">512</span>和<span class="number">1023</span>之间的将会被映射到 <span class="number">1024</span>内，其他的将会被映射到大于或对于<span class="number">1024</span>的端口，也就是说是同</span><br><span class="line">    范围映射。还要注意，这种映射和目的端口无关。因此，如果客户想和防火墙外的HTTP服务器联系，它是不会被映射到FTP control所用</span><br><span class="line">    的端口的。   </span><br><span class="line">#</span><br><span class="line"><span class="number">1</span>、DNAT target</span><br><span class="line">这个target是用来做目的网络地址转换的，就是重写包的目的IP地址。如果一个包被匹配了，那么和它属于同一个流的所有的包都会被自动转换，</span><br><span class="line">然后就可以被路由到正确的主机或网络。DNAT target是非常有用的。比如，你的Web服务器在LAN内部，而且没有可在Internet上使用的真实IP地址，</span><br><span class="line">那就可以使用这个 target让防火墙把所有到它自己HTTP端口的包转发给LAN内部真正的Web服务器。目的地址也可以是一个范围，这样的话，DNAT会为</span><br><span class="line">每一个流随机分配一个地址。因此，我们可以用这个target做某种类型地负载平衡。</span><br><span class="line">注意，DANT target只能用在nat表的PREROUTING和OUTPUT链中，或者是被这两条链调用的链里。但还要注意的是，包含DANT target的链不能被除此之外的</span><br><span class="line">其他链调用，如POSTROUTING。</span><br><span class="line"><span class="number">2</span>、SNAT target</span><br><span class="line">这个target是用来做源网络地址转换的，就是重写包的源IP地址。当我们有几个机子共享一个Internet 连接时，就能用到它了。先在内核里打开ip转发功能，</span><br><span class="line">然后再写一个SNAT规则，就可以把所有从本地网络出去的包的源地址改为Internet连接的地址了。如果我们不这样做而是直接转发本地网的包的话，Internet上的</span><br><span class="line">机子就不知道往哪儿发送应答了，因为在本地网里我们一般使用的是IANA组织专门指定的一段地址，它们是不能在Internet上使用的。SNAT target的作用就是让所</span><br><span class="line">有从本地网出发的包看起来都是从一台机子发出的，这台机子一般就是防火墙。</span><br><span class="line">SNAT只能用在nat表的POSTROUTING链里。只要连接的第一个符合条件的包被SNAT了，那么这个连接的其他所有的包都会自动地被SNAT,而且这个规则还会应用于这个连</span><br><span class="line">接所在流的所有数据包。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#、NFQUEUE</span><br><span class="line">iptables除了可以把包转发给特定地址特定端口的监听服务外, 还可以转发到一个叫做NFQUEUE的目标上,</span><br><span class="line">NFQUEUE是</span><br><span class="line">iptables的一种规则目标, 它用于将网络数据包从内核传给用户态进程, 由用户态进程来裁决如何处理该数据包，并将裁决结果返回内核。传输通道为以数字标识的队列。队列由固定长度的链表实现，链表元素为数据包及元数据(kernel skb结构)。</span><br><span class="line">在内核中，Netfilter框架尝试将符合规则的数据包放入队列中。若队列已满，则丢弃该数据包。因此，若用户态进程处理过慢，则会严重影响网络性能。内核与用户态进程之间基于</span><br><span class="line">NFNETLINK通信，数据包需要在内核态与用户态之间进行拷贝，因而这种机制的性能比较差。</span><br><span class="line">iptables -A INPUT -j NFQUEUE --queue-num <span class="number">0</span></span><br><span class="line">在包被转发到queue num=<span class="number">0</span> NFQUEUE队列之后, 某个使用libnetfilter_queue 连接队列<span class="number">0</span>的进程从内核态获取到包的信息, </span><br><span class="line">对包的去向进行裁决. NFQUEUE之后的工作是在用户态完成的, 所以这里也有相应的性能损耗. fqting使用了NFQUEUE对包的内容进行</span><br><span class="line">了混淆, 混淆后的包的参数使之在IDS上重组时产生错位, 重组流不为中间路由所知, 在proxy ip不被封禁的情况下可以绕过封禁内容的防火墙.</span><br></pre></td></tr></table></figure><h2 id="清除规则"><a href="#清除规则" class="headerlink" title="清除规则"></a><strong>清除规则</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 清除规则</span><br><span class="line">iptables [-t tables] [-F/X/Z]</span><br><span class="line">-F：清除所有已制定的规则</span><br><span class="line">-X：删除所有使用者自定义的 chain(其是 tables)</span><br><span class="line">-Z：将所有的 chain 的计数与流量统计都清零</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Iptable </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Iptabl </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clash网易云配置</title>
      <link href="/2022/04/11/blogs/Clash%E7%BD%91%E6%98%93%E4%BA%91%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/04/11/blogs/Clash%E7%BD%91%E6%98%93%E4%BA%91%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Clash-网易云配置"><a href="#Clash-网易云配置" class="headerlink" title="Clash-网易云配置"></a>Clash-网易云配置</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,s1.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,s2.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,s3.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,st.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,p1.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,p2.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,p3.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,p4.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,m7.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,m701.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,m704.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,m8.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,m10.music.126.net,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,music.163.com,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,*.126.com,🎬网易云</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,*.music.126.net,🎬网易云</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> clash </category>
          
          <category> 配置 </category>
          
          <category> 网易云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> clash </tag>
            
            <tag> 配置 </tag>
            
            <tag> 网易云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Identity Service 4 APi 获取用户信息</title>
      <link href="/2022/04/11/Node/IdentityService4%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7/"/>
      <url>/2022/04/11/Node/IdentityService4%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="Identity-Service-4-APi-获取用户信息"><a href="#Identity-Service-4-APi-获取用户信息" class="headerlink" title="Identity Service 4 APi 获取用户信息"></a>Identity Service 4 APi 获取用户信息</h1><p>在构造Asp.Net等基于.Net Framework等应用时，Web Api或者其它后台往往与前台处于同一进程，一般通过Session或者其它方式获取用户信息。采用bearer JWT认证的Web Api与被调用的前端处于不同的进程甚至不同的服务器，因此不能使用Session等获取用户信息。用户信息通过JWT传递到API，被平台填充到User.Claims中，可以直接获取，代码如下：</p><p><code>from c in User.Claims select new &#123; c.Type, c.Value &#125;</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Api.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;identity&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">Authorize</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IdentityController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Get</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> JsonResult(<span class="keyword">from</span> c <span class="keyword">in</span> User.Claims <span class="keyword">select</span> <span class="keyword">new</span> &#123; c.Type, c.Value &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 作者：寻找无名的特质<br> 链接：<a href="https://www.jianshu.com/p/36c2ea3160a0">https://www.jianshu.com/p/36c2ea3160a0</a><br> 来源：简书<br> 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h2 id="The-End"><a href="#The-End" class="headerlink" title="The End."></a>The End.</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> IdentityServer </category>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> IdentityServer </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>skoruba-Duende.IdentityServer.Admin</title>
      <link href="/2022/04/10/Node/IdentityServer/"/>
      <url>/2022/04/10/Node/IdentityServer/</url>
      
        <content type="html"><![CDATA[<h1 id="Duende-IdentityServer-和-Asp-Net-核心身份的管理"><a href="#Duende-IdentityServer-和-Asp-Net-核心身份的管理" class="headerlink" title="Duende IdentityServer 和 Asp.Net 核心身份的管理"></a>Duende IdentityServer 和 Asp.Net 核心身份的管理</h1><p>Github:<a href="https://github.com/skoruba/Duende.IdentityServer.Admin">GitHub - skoruba&#x2F;Duende.IdentityServer.Admin：Duende IdentityServer 和 Asp.Net Core Identity ⚡ 的管理</a></p><h2 id="添加Api客户端"><a href="#添加Api客户端" class="headerlink" title="添加Api客户端"></a>添加Api客户端</h2><p>Login.Api 为例</p><p>Ids4配置地址：<a href="https://localhost:44303/Configuration/Clients">https://localhost:44303/Configuration/Clients</a></p><h3 id="必须添加Api-Scope"><a href="#必须添加Api-Scope" class="headerlink" title="必须添加Api Scope"></a>必须添加Api Scope</h3><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410190548460.png" alt="IdentityServer-image-20220410190548460"></p><h3 id="添加客户端"><a href="#添加客户端" class="headerlink" title="添加客户端"></a>添加客户端</h3><p>添加</p><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410190906111.png" alt="IdentityServer-image-20220410190906111"></p><p>基本设置</p><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410191004732.png" alt="IdentityServer-image-20220410191004732"></p><p>如下图，其中作用设置必须已有的。</p><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410191109566.png" alt="IdentityServer-image-20220410191109566"></p><h3 id="Appsetting"><a href="#Appsetting" class="headerlink" title="Appsetting"></a>Appsetting</h3><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410191235559.png" alt="IdentityServer-image-20220410191235559"></p><h2 id="添加Vue"><a href="#添加Vue" class="headerlink" title="添加Vue"></a>添加Vue</h2><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410191528315.png" alt="IdentityServer-image-20220410191528315"></p><h3 id="添加客户端-1"><a href="#添加客户端-1" class="headerlink" title="添加客户端"></a>添加客户端</h3><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410191623757.png" alt="IdentityServer-image-20220410191623757"></p><div style="color:red;">    基础设置注意作用域，需要在配置中设置。</div><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410192040067.png" alt="IdentityServer-image-20220410192040067"></p><p><img src="/../../images/IdentityServer/IdentityServer-image-20220410191815352.png" alt="IdentityServer-image-20220410191815352"></p><div style="color:red;">    注意配置跨域来源、注销地址</div><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end."></a>The end.</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> IdentityServer </category>
          
          <category> .net </category>
          
          <category> ids4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> IdentityServer </tag>
            
            <tag> .net </tag>
            
            <tag> ids4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger-IdentityServer4-oauth2</title>
      <link href="/2022/04/10/Node/Swagger+IdentityServer4/"/>
      <url>/2022/04/10/Node/Swagger+IdentityServer4/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-IdentityServer4-的-ASP-NET-Core-Swagger-UI-授权"><a href="#使用-IdentityServer4-的-ASP-NET-Core-Swagger-UI-授权" class="headerlink" title="使用 IdentityServer4 的 ASP.NET Core Swagger UI 授权"></a>使用 IdentityServer4 的 ASP.NET Core Swagger UI 授权</h1><h2 id="参考项目Demo"><a href="#参考项目Demo" class="headerlink" title="参考项目Demo"></a>参考项目Demo</h2><ul><li>IdentityService：<a href="https://github.com/skoruba/Duende.IdentityServer.Admin">https://github.com/skoruba/Duende.IdentityServer.Admin</a></li><li>Sts+ .net Core Api（Jwt）： <a href="https://github.com/damienbod/IdentityServer4VueJs">https://github.com/damienbod/IdentityServer4VueJs</a></li><li>Sts+ Vue ：<a href="https://github.com/damienbod/AspNetCoreMvcVueJs">https://github.com/damienbod/AspNetCoreMvcVueJs</a></li><li>net core swagger-ui-authorization：<a href="https://github.com/scottbrady91/IdentityServer4-Swagger-Integration">https://github.com/scottbrady91/IdentityServer4-Swagger-Integration</a><ul><li>参考项目文档：<a href="https://www.scottbrady91.com/identity-server/aspnet-core-swagger-ui-authorization-using-identityserver4">https://www.scottbrady91.com/identity-server/aspnet-core-swagger-ui-authorization-using-identityserver4</a></li></ul></li></ul><hr><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>上述参考项目文档摘要：</p><p>​Swagger 与 OAuth 授权服务器的集成相对有据可查，因此在本文中，您将了解使用 Swagger 将 IdentityServer 支持添加到 ASP.NET Core API 的基础知识，然后查看这种方法的局限性和一些替代方案可能值得探索。</p><p>​本文将演示Swashbuckle和NSwag。</p><h3 id="准备你的-API"><a href="#准备你的-API" class="headerlink" title="准备你的 API"></a>准备你的 API</h3><p>您可以在您的<code>ConfigureServices</code>方法中注册此身份验证库：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">services.AddAuthentication(<span class="string">&quot;Bearer&quot;</span>)</span><br><span class="line">    .AddIdentityServerAuthentication(<span class="string">&quot;Bearer&quot;</span>, options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// required audience of access tokens</span></span><br><span class="line">        options.ApiName = <span class="string">&quot;api1&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// auth server base endpoint (this will be used to search for disco doc)</span></span><br><span class="line">        options.Authority = <span class="string">&quot;https://localhost:5000&quot;</span>;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p><code>Configure</code>然后通过将您的方法 更新为如下所示在您的 HTTP 管道中启用它：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    app.UseRouting();</span><br><span class="line"></span><br><span class="line">    app.UseAuthentication();</span><br><span class="line">    app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">    app.UseEndpoints(endpoints =&gt; endpoints.MapDefaultControllerRoute());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，您可以使用<code>AuthorizeAttribute</code>on 操作或控制器来触发此操作。您现在应该从这些受保护的端点获得 401 Unauthorized。</p><h3 id="将-OAuth-支持添加到-Swashbuckle"><a href="#将-OAuth-支持添加到-Swashbuckle" class="headerlink" title="将 OAuth 支持添加到 Swashbuckle"></a>将 OAuth 支持添加到 Swashbuckle</h3><p>回到您的 API，让我们引入 Swashbuckle：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Swashbuckle.AspNetCore</span><br><span class="line">dotnet add package Swashbuckle.AspNetCore.Swagger</span><br></pre></td></tr></table></figure><p>您可以通过将以下内容添加到您的<code>ConfigureServices</code>方法来注册：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">services.AddSwaggerGen(options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        options.SwaggerDoc(<span class="string">&quot;v1&quot;</span>, <span class="keyword">new</span> OpenApiInfo &#123;Title = <span class="string">&quot;Protected API&quot;</span>, Version = <span class="string">&quot;v1&quot;</span>&#125;);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// we&#x27;re going to be adding more here...</span></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>这将配置一个带有一些描述性信息的基本 Swagger 文档。</p><p>接下来，您想将一些有关您的授权服务器的信息添加到 swagger 文档中。由于您的 UI 将在最终用户的浏览器中运行，并且在该浏览器中运行的 JavaScript 将需要访问令牌，因此您将使用授权代码流（以及稍后用于代码交换的 Proof-Key （PKCE））。</p><p>因此，您需要告诉 Swashbuckle 您的授权和令牌端点的位置（检查您的 IdentityServer 迪斯科文档），以及它将使用的范围（其中键是范围本身，值是显示名称）。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">options.AddSecurityDefinition(<span class="string">&quot;oauth2&quot;</span>, <span class="keyword">new</span> OpenApiSecurityScheme</span><br><span class="line">&#123;</span><br><span class="line">    Type = SecuritySchemeType.OAuth2,</span><br><span class="line">    Flows = <span class="keyword">new</span> OpenApiOAuthFlows</span><br><span class="line">    &#123;</span><br><span class="line">        AuthorizationCode = <span class="keyword">new</span> OpenApiOAuthFlow</span><br><span class="line">        &#123;</span><br><span class="line">            AuthorizationUrl = <span class="keyword">new</span> Uri(<span class="string">&quot;https://localhost:5000/connect/authorize&quot;</span>),</span><br><span class="line">            TokenUrl = <span class="keyword">new</span> Uri(<span class="string">&quot;https://localhost:5000/connect/token&quot;</span>),</span><br><span class="line">            Scopes = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                &#123;<span class="string">&quot;api1&quot;</span>, <span class="string">&quot;Demo API - full access&quot;</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>您现在需要告诉您的 swagger 文档哪些端点需要访问令牌才能工作，并且它们可以返回 401 和 403 响应。您可以使用 来执行此操作<code>IOperationFilter</code>，您可以在下面看到它（这已改编自<a href="https://github.com/dotnet-architecture/eShopOnContainers">eShopOnContainers</a>示例存储库中的过滤器）。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthorizeCheckOperationFilter</span> : <span class="title">IOperationFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">OpenApiOperation operation, OperationFilterContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> hasAuthorize = </span><br><span class="line">          context.MethodInfo.DeclaringType.GetCustomAttributes(<span class="literal">true</span>).OfType&lt;AuthorizeAttribute&gt;().Any() </span><br><span class="line">          || context.MethodInfo.GetCustomAttributes(<span class="literal">true</span>).OfType&lt;AuthorizeAttribute&gt;().Any();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (hasAuthorize)</span><br><span class="line">        &#123;</span><br><span class="line">            operation.Responses.Add(<span class="string">&quot;401&quot;</span>, <span class="keyword">new</span> OpenApiResponse &#123; Description = <span class="string">&quot;Unauthorized&quot;</span> &#125;);</span><br><span class="line">            operation.Responses.Add(<span class="string">&quot;403&quot;</span>, <span class="keyword">new</span> OpenApiResponse &#123; Description = <span class="string">&quot;Forbidden&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line">            operation.Security = <span class="keyword">new</span> List&lt;OpenApiSecurityRequirement&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">new</span> OpenApiSecurityRequirement</span><br><span class="line">                &#123;</span><br><span class="line">                    [</span><br><span class="line">                        <span class="keyword">new</span> OpenApiSecurityScheme &#123;Reference = <span class="keyword">new</span> OpenApiReference </span><br><span class="line">                        &#123;</span><br><span class="line">                            Type = ReferenceType.SecurityScheme, </span><br><span class="line">                            Id = <span class="string">&quot;oauth2&quot;</span>&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ] = <span class="keyword">new</span>[] &#123;<span class="string">&quot;api1&quot;</span>&#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，您正在寻找所有带有 的控制器和操作<code>AuthorizeAttribute</code>，并告诉您的 Swagger 文档包括额外的可能响应，并且它需要一个具有特定范围授权的访问令牌，如安全定义中所定义。</p><p>然后，您可以像这样注册：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options.OperationFilter&lt;AuthorizeCheckOperationFilter&gt;();</span><br></pre></td></tr></table></figure><p>现在，您可以通过将以下内容添加到您的<code>Configure</code>方法中来配置管道中的 Swagger 文档端点和 Swagger UI：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.UseSwagger();</span><br><span class="line">app.UseSwaggerUI(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.SwaggerEndpoint(<span class="string">&quot;/swagger/v1/swagger.json&quot;</span>, <span class="string">&quot;My API V1&quot;</span>);</span><br><span class="line"></span><br><span class="line">    options.OAuthClientId(<span class="string">&quot;demo_api_swagger&quot;</span>);</span><br><span class="line">    options.OAuthAppName(<span class="string">&quot;Demo API - Swagger&quot;</span>);</span><br><span class="line">    options.OAuthUsePkce();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在这里，您还要说明您希望 Swagger UI 用于授权请求的客户端 ID、显示名称以及它应该使用 PKCE。</p><p><a href="https://docs.microsoft.com/en-us/aspnet/core/tutorials/getting-started-with-swashbuckle">您可以在ASP.NET Core 文档</a> 的 ASP.NET Core API 中找到更全面的配置 Swashbuckle 的演练。</p><h3 id="将-OAuth-支持添加到-NSwag"><a href="#将-OAuth-支持添加到-NSwag" class="headerlink" title="将 OAuth 支持添加到 NSwag"></a>将 OAuth 支持添加到 NSwag</h3><p>让我们看看如何使用 NSwag 实现同样的效果。第一步是通过 NuGet 引入 NSwag 库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package NSwag.AspNetCore</span><br></pre></td></tr></table></figure><p><code>ConfigureServices</code>现在，您可以通过将注册添加到您的方法 来将 Swagger 文档生成添加到您的项目中。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">services.AddOpenApiDocument(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.DocumentName = <span class="string">&quot;v1&quot;</span>;</span><br><span class="line">    options.Title = <span class="string">&quot;Protected API&quot;</span>;</span><br><span class="line">    options.Version = <span class="string">&quot;v1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we&#x27;re going to be adding more here...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>接下来，您想将一些有关您的授权服务器的信息添加到 swagger 文档中。由于您的 UI 将在最终用户的浏览器中运行，并且在该浏览器中运行的 JavaScript 将需要访问令牌，因此您将使用授权代码流（以及稍后用于代码交换的 Proof-Key （PKCE））。</p><p>因此，您需要告诉 Swashbuckle 您的授权和令牌端点的位置（检查您的 IdentityServer 迪斯科文档），以及它将使用的范围（其中键是范围本身，值是显示名称）。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">options.AddSecurity(<span class="string">&quot;oauth2&quot;</span>, <span class="keyword">new</span> OpenApiSecurityScheme</span><br><span class="line">&#123;</span><br><span class="line">    Type = OpenApiSecuritySchemeType.OAuth2,</span><br><span class="line">    Flows = <span class="keyword">new</span> OpenApiOAuthFlows</span><br><span class="line">    &#123;</span><br><span class="line">        AuthorizationCode = <span class="keyword">new</span> OpenApiOAuthFlow</span><br><span class="line">        &#123;</span><br><span class="line">            AuthorizationUrl = <span class="string">&quot;https://localhost:5000/connect/authorize&quot;</span>,</span><br><span class="line">            TokenUrl = <span class="string">&quot;https://localhost:5000/connect/token&quot;</span>,</span><br><span class="line">            Scopes = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; &#123; &#123; <span class="string">&quot;api1&quot;</span>, <span class="string">&quot;Demo API - full access&quot;</span> &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>为了让 NSwag 了解哪些端点需要访问令牌并向 Swagger 文档添加安全范围，您可以使用<code>OperationSecurityScopeProcessor</code>该类自动扫描所有控制器和操作以获取<code>AuthorizationAttributes</code>.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options.OperationProcessors.Add(<span class="keyword">new</span> OperationSecurityScopeProcessor(<span class="string">&quot;oauth2&quot;</span>));</span><br></pre></td></tr></table></figure><p>然后，您可以通过将以下内容添加到您的<code>Configure</code>方法中来启用管道中的 Swagger 文档和 UI：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.UseOpenApi();</span><br><span class="line">app.UseSwaggerUi3(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.OAuth2Client.ClientId = <span class="string">&quot;demo_api_swagger&quot;</span>;</span><br><span class="line">    options.OAuth2Client.AppName = <span class="string">&quot;Demo API - Swagger&quot;</span>;</span><br><span class="line">    options.OAuth2Client.UsePkceWithAuthorizationCodeGrant = <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在这里，您还要说明您希望 Swagger UI 用于授权请求的客户端 ID、显示名称以及它应该使用 PKCE。</p><p><a href="https://docs.microsoft.com/en-us/aspnet/core/tutorials/getting-started-with-nswag">您可以在ASP.NET Core 文档</a> 中找到更全面的在 ASP.NET Core API 中配置 NSwag 的演练。</p><h2 id="部分代码"><a href="#部分代码" class="headerlink" title="部分代码"></a>部分代码</h2><h3 id="安装Nuget"><a href="#安装Nuget" class="headerlink" title="安装Nuget"></a>安装Nuget</h3><ul><li><p>IdentityServer4.AccessTokenValidation</p></li><li><p>Swashbuckle.AspNetCore</p></li><li><p>Swashbuckle.AspNetCore.Swagger</p></li></ul><h3 id="startup-cs"><a href="#startup-cs" class="headerlink" title="startup.cs"></a>startup.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Builder;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> Microsoft.OpenApi.Models;</span><br><span class="line"><span class="keyword">using</span> Swashbuckle.AspNetCore.SwaggerGen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Api.Swashbuckle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Startup</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            services.AddControllers();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置跨域</span></span><br><span class="line">            services.AddCors(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                options.AddPolicy(<span class="string">&quot;AllowAllOrigins&quot;</span>,</span><br><span class="line">                    builder =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        builder</span><br><span class="line">                            .AllowCredentials()</span><br><span class="line">                            .WithOrigins(<span class="string">&quot;http://localhost:44357&quot;</span>, <span class="string">&quot;https://localhost:44357&quot;</span>)  <span class="comment">// change me！！</span></span><br><span class="line">                            .SetIsOriginAllowedToAllowWildcardSubdomains()</span><br><span class="line">                            .AllowAnyHeader()</span><br><span class="line">                            .AllowAnyMethod();</span><br><span class="line">                    &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            services.AddAuthentication(<span class="string">&quot;Bearer&quot;</span>)</span><br><span class="line">                .AddIdentityServerAuthentication(<span class="string">&quot;Bearer&quot;</span>, options =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    options.ApiName = <span class="string">&quot;Demo_Api_Source&quot;</span>; <span class="comment">// change me！！</span></span><br><span class="line">                    options.Authority = <span class="string">&quot;https://localhost:44310&quot;</span>;  <span class="comment">// 认证地址 change me！！</span></span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">            services.AddSwaggerGen(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                options.SwaggerDoc(<span class="string">&quot;v1&quot;</span>, <span class="keyword">new</span> OpenApiInfo &#123;Title = <span class="string">&quot;Demo.SwaggerUi&quot;</span>, Version = <span class="string">&quot;v1&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">                options.AddSecurityDefinition(<span class="string">&quot;oauth2&quot;</span>, <span class="keyword">new</span> OpenApiSecurityScheme</span><br><span class="line">                &#123;</span><br><span class="line">                    Type = SecuritySchemeType.OAuth2,</span><br><span class="line">                    Flows = <span class="keyword">new</span> OpenApiOAuthFlows</span><br><span class="line">                    &#123;</span><br><span class="line">                        AuthorizationCode = <span class="keyword">new</span> OpenApiOAuthFlow</span><br><span class="line">                        &#123;</span><br><span class="line">                            AuthorizationUrl = <span class="keyword">new</span> Uri(<span class="string">&quot;https://localhost:44310/connect/authorize&quot;</span>),</span><br><span class="line">                            TokenUrl = <span class="keyword">new</span> Uri(<span class="string">&quot;https://localhost:44310/connect/token&quot;</span>),</span><br><span class="line">                            Scopes = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="comment">//认证资源,一个或者更多..</span></span><br><span class="line">                                &#123; <span class="string">&quot;Demo_Api_Scopes&quot;</span>, <span class="string">&quot;Demo Simple Scopes&quot;</span>&#125;  <span class="comment">// change me！！</span></span><br><span class="line">                                <span class="comment">// more...</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                options.OperationFilter&lt;AuthorizeCheckOperationFilter&gt;();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            app.UseDeveloperExceptionPage();</span><br><span class="line">            app.UseHttpsRedirection();</span><br><span class="line"></span><br><span class="line">            app.UseRouting();</span><br><span class="line"></span><br><span class="line">            app.UseAuthentication();</span><br><span class="line">            app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">            app.UseSwagger();</span><br><span class="line">            app.UseSwaggerUI(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                options.SwaggerEndpoint(<span class="string">&quot;/swagger/v1/swagger.json&quot;</span>, <span class="string">&quot;My API&quot;</span>);</span><br><span class="line"></span><br><span class="line">                options.OAuthClientId(<span class="string">&quot;Demo_Api_SwaggerUi&quot;</span>); <span class="comment">// Ids4 认证客户端名称  // change me！！</span></span><br><span class="line">                options.OAuthAppName(<span class="string">&quot;Demo API - Swagger&quot;</span>); <span class="comment">// 应用名称   // change me！！</span></span><br><span class="line">                options.OAuthUsePkce();</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// 设置跨域</span></span><br><span class="line">            app.UseCors(<span class="string">&quot;AllowAllOrigins&quot;</span>); <span class="comment">// change me！！</span></span><br><span class="line">            app.UseEndpoints(endpoints =&gt; endpoints.MapDefaultControllerRoute());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthorizeCheckOperationFilter</span> : <span class="title">IOperationFilter</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">OpenApiOperation operation, OperationFilterContext context</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> hasAuthorize = context.MethodInfo.DeclaringType.GetCustomAttributes(<span class="literal">true</span>).OfType&lt;AuthorizeAttribute&gt;().Any() ||</span><br><span class="line">                               context.MethodInfo.GetCustomAttributes(<span class="literal">true</span>).OfType&lt;AuthorizeAttribute&gt;().Any();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (hasAuthorize)</span><br><span class="line">            &#123;</span><br><span class="line">                operation.Responses.Add(<span class="string">&quot;401&quot;</span>, <span class="keyword">new</span> OpenApiResponse &#123; Description = <span class="string">&quot;Unauthorized&quot;</span> &#125;);</span><br><span class="line">                operation.Responses.Add(<span class="string">&quot;403&quot;</span>, <span class="keyword">new</span> OpenApiResponse &#123; Description = <span class="string">&quot;Forbidden&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// If the security scheme is of type &quot;oauth2&quot; or &quot;openIdConnect&quot;, then the value is a list of scope</span></span><br><span class="line">                <span class="comment">// names required for the execution.</span></span><br><span class="line">                operation.Security = <span class="keyword">new</span> List&lt;OpenApiSecurityRequirement&gt; </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">new</span> OpenApiSecurityRequirement</span><br><span class="line">                    &#123;</span><br><span class="line">                        [</span><br><span class="line">                          <span class="keyword">new</span> OpenApiSecurityScheme &#123;</span><br><span class="line">                               Reference = <span class="keyword">new</span> OpenApiReference &#123;</span><br><span class="line">                                   Type = ReferenceType.SecurityScheme, </span><br><span class="line">                                   Id = <span class="string">&quot;oauth2&quot;</span>,</span><br><span class="line">                               &#125;</span><br><span class="line">                          &#125;</span><br><span class="line">                        ] = <span class="keyword">new</span>[] &#123; <span class="string">&quot;Demo_Api_Scopes&quot;</span> &#125; <span class="comment">// change me！！</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="WeatherForecastController"><a href="#WeatherForecastController" class="headerlink" title="WeatherForecastController"></a>WeatherForecastController</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Api.Swashbuckle.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Authorize</span>] <span class="comment">// 可以设置角色，规则</span></span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeatherForecastController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span>[] Summaries = &#123;</span><br><span class="line">            <span class="string">&quot;Freezing&quot;</span>, <span class="string">&quot;Bracing&quot;</span>, <span class="string">&quot;Chilly&quot;</span>, <span class="string">&quot;Cool&quot;</span>, <span class="string">&quot;Mild&quot;</span>, <span class="string">&quot;Warm&quot;</span>, <span class="string">&quot;Balmy&quot;</span>, <span class="string">&quot;Hot&quot;</span>, <span class="string">&quot;Sweltering&quot;</span>, <span class="string">&quot;Scorching&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IEnumerable&lt;WeatherForecast&gt; <span class="title">Get</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> rng = <span class="keyword">new</span> Random();</span><br><span class="line">            <span class="keyword">return</span> Enumerable.Range(<span class="number">1</span>, <span class="number">5</span>).Select(index =&gt; <span class="keyword">new</span> WeatherForecast</span><br><span class="line">            &#123;</span><br><span class="line">                Date = DateTime.Now.AddDays(index),</span><br><span class="line">                TemperatureC = rng.Next(<span class="number">-20</span>, <span class="number">55</span>),</span><br><span class="line">                Summary = Summaries[rng.Next(Summaries.Length)]</span><br><span class="line">            &#125;)</span><br><span class="line">            .ToArray();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><p>Token在线解析工具：<a href="https://tooltt.com/jwt-decode/">https://tooltt.com/jwt-decode/</a></p><p>Tips token中的aud：Ids4 toke 中设置aud:需要在api Scopes 中设置对应资源，并且在客户端中引用</p><h2 id="The-End"><a href="#The-End" class="headerlink" title="The End."></a>The End.</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> IdentityServer </category>
          
          <category> .net </category>
          
          <category> ids4 </category>
          
          <category> Swagger </category>
          
          <category> oauth2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> IdentityServer </tag>
            
            <tag> .net </tag>
            
            <tag> ids4 </tag>
            
            <tag> Swagger </tag>
            
            <tag> oauth2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 常用命令</title>
      <link href="/2022/04/09/blogs/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/04/09/blogs/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h1><p>安装</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure><p>升级</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update hexo -g</span><br></pre></td></tr></table></figure><p>初始化</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="2-发表文章"><a href="#2-发表文章" class="headerlink" title="2.发表文章"></a>2.发表文章</h2><p>新建文章</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo <span class="built_in">new</span> <span class="string">&quot;我的博客&quot;</span></span><br></pre></td></tr></table></figure><p>发表草稿</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo p == hexo publish</span><br></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g == hexo generate</span><br></pre></td></tr></table></figure><p>启动服务预览</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s == hexo server</span><br></pre></td></tr></table></figure><p>部署到远程</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>联合使用   清除缓存+生成静态文件+运行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="3-清理缓存"><a href="#3-清理缓存" class="headerlink" title="3.清理缓存"></a>3.清理缓存</h2><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h2 id="4-版本"><a href="#4-版本" class="headerlink" title="4.版本"></a>4.版本</h2><p>查看Hexo运行版本</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><h2 id="The-End"><a href="#The-End" class="headerlink" title="The End."></a>The End.</h2>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Hexo </category>
          
          <category> 命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.net Core Api Swagger Ui 添加注释显示</title>
      <link href="/2022/04/09/Node/SwaggerUi%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A/"/>
      <url>/2022/04/09/Node/SwaggerUi%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="Net-Core-Api-Swagger-添加显示注释"><a href="#Net-Core-Api-Swagger-添加显示注释" class="headerlink" title="Net Core Api Swagger 添加显示注释"></a>Net Core Api Swagger 添加显示注释</h1><h2 id="StartUp中配置"><a href="#StartUp中配置" class="headerlink" title="StartUp中配置"></a>StartUp中配置</h2><blockquote><p>在 ConfigureServices 中添加 </p></blockquote><p>相关代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> basePath = AppContext.BaseDirectory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xmlPath = Path.Combine(basePath, <span class="string">&quot;Gmzta.ControlPlane.Api.xml&quot;</span>);</span><br><span class="line">options.IncludeXmlComments(xmlPath, <span class="literal">true</span>);<span class="comment">//显示控制器层注释</span></span><br><span class="line"><span class="comment">//options.OrderActionsBy(s =&gt; s.RelativePath);//对Action的名称进行排序</span></span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="/../../images/SwaggerUi%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A/image-20220709125226621.png" alt="image-20220709125226621"></p><h2 id="设置属性-勾选文档生成"><a href="#设置属性-勾选文档生成" class="headerlink" title="设置属性-勾选文档生成"></a>设置属性-勾选文档生成</h2><blockquote><p>错误代码取消1591显示</p></blockquote><p><img src="/../../images/SwaggerUi%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A/image-20220709125754112.png" alt="image-20220709125754112"></p><h2 id="The-End"><a href="#The-End" class="headerlink" title="The End."></a>The End.</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> .net </category>
          
          <category> Swagger </category>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> .net </tag>
            
            <tag> Swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee搭建图床</title>
      <link href="/2022/03/20/blogs/gitee%E5%9B%BE%E5%BA%8A/"/>
      <url>/2022/03/20/blogs/gitee%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="Typroa-Picgo-Gitee-图床"><a href="#Typroa-Picgo-Gitee-图床" class="headerlink" title="[Typroa+Picgo+Gitee]图床"></a>[Typroa+Picgo+Gitee]图床</h1><blockquote><p>Typora破解版下载链接: <a href="https://pan.baidu.com/s/1ilo0dXI0zI9HeqVupMiKvw">https://pan.baidu.com/s/1ilo0dXI0zI9HeqVupMiKvw</a> 提取码: ameh </p><p>PicGo下载 : <a href="https://molunerfinn.com/PicGo/">https://molunerfinn.com/PicGo/</a></p></blockquote><h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><ol><li><p>Gitee创建一个 <strong>公开</strong> 的空仓库作为图床</p></li><li><p>生成令牌<img src="/../../images/gitee%E5%9B%BE%E5%BA%8A/gitee%E5%9B%BE%E5%BA%8A/image-20220319135024958.png" alt="image-20220319135024958"></p><p><strong>权限设置</strong></p></li></ol><p><img src="/../../images/gitee%E5%9B%BE%E5%BA%8A/image-20220319135206100.png" alt="image-20220319135206100"></p><h2 id="Picgo-配置"><a href="#Picgo-配置" class="headerlink" title="Picgo 配置"></a>Picgo 配置</h2><ol><li><p>下载gitee-uploader<img src="/../../images/gitee%E5%9B%BE%E5%BA%8A/image-20220319135412432.png" alt="image-20220319135412432"></p><p>或者 上传本地插件</p></li><li><p>配置gitee</p></li></ol><p><img src="/../../images/gitee%E5%9B%BE%E5%BA%8A/image-20220319135614114.png" alt="image-20220319135614114"></p><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><ol><li><img src="/../../images/gitee%E5%9B%BE%E5%BA%8A/image-20220319135840897.png" alt="image-20220319135840897"></li></ol><h2 id="The-End"><a href="#The-End" class="headerlink" title="The End."></a>The End.</h2>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb连接雷电模拟器修改hosts</title>
      <link href="/2022/03/20/Node/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/"/>
      <url>/2022/03/20/Node/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/</url>
      
        <content type="html"><![CDATA[<h1 id="adb连接雷电模拟器修改hosts"><a href="#adb连接雷电模拟器修改hosts" class="headerlink" title="adb连接雷电模拟器修改hosts"></a><strong>adb连接雷电模拟器修改hosts</strong></h1><p>下面很多都是转载,背景简介:我的模拟器有2个以上devices,按照网上查询的很多都不能使用,在下面才找到解决方案</p><ol><li>如果找到<a href="https://so.csdn.net/so/search?q=adb&spm=1001.2101.3001.7020">adb</a>？</li></ol><p>雷电安装模拟器自带了一份，当然熟悉的朋友，喜欢用自己珍藏的版本也是可以的。雷电自带的版本再安装目录下，名字就叫adb.exe，如本人的电脑adb全路径为：F:\mnq\dnplayer\adb.exe.</p><ol start="2"><li>如何链接设备？</li></ol><p>一步步看命令行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmd</span><br><span class="line">cd F:\mnq\dnplayer</span><br><span class="line">adb.exe kill-server <span class="comment">//(很多时候连不上，就是因为没有kill)</span></span><br><span class="line">adb.exe devices</span><br></pre></td></tr></table></figure><p>这步很重要，完成之后，会list出所有设备</p><p>备注:我使用的是配置到环境变量中的adb,可以直接使用 adb devices</p><ol start="3"><li>多开的情况下如何指定操作哪个模拟器？</li></ol><p>这一步至关重要，所以提前说明，后面的所有操作都是单开为例，多开的情况，请参考这部分，切记切记！！！</p><p>adb devices会获取模拟器列表，指定模拟器只需要在adb后面加上” -s 模拟器标识”即可！</p><p>比如说：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5555</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5557</span></span><br></pre></td></tr></table></figure><p>（对，雷电的adb端口是有规律的，规律就是 5555 + index * 2）</p><p>下面图片是我本地的</p><p><img src="/../../images/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/20201204141422735.png" alt="20201204141422735"></p><ol start="4"><li>重新挂载模拟器</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb -s emulator<span class="number">-5556</span> remount</span><br></pre></td></tr></table></figure><ol start="5"><li><p>将模拟器hosts pull到本地目录C:\Users\Administrator</p><p><img src="/../../images/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/20201204141707851.png" alt="20201204141707851"></p></li><li><p>在本地用记事本打开hosts文件(在C:\Users\Administrator文件中 ) 修改hosts文件，然后保存</p><p><img src="/../../images/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/6a5efc7b62c6a2d51c73a18d8fc7ce6f.png" alt="6a5efc7b62c6a2d51c73a18d8fc7ce6f"></p></li><li><p>将修改后的hosts文件上传到模拟器</p></li></ol><p><img src="/../../images/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/image-20220320122731087.png" alt="image-20220320122731087"></p><p>上传成功</p><p>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><blockquote><p>备注:上面的过程我看了是可以把hosts上传到模拟器上的,但是hosts的配置不起作用,也不知道什么问题,今天刚刚我把雷电模拟器启用了网络桥接,然后又重新配置了一下hosts,使用第5步把</p></blockquote><ul><li>重新配置的hosts上传到模拟器上,结果现在可以了</li></ul><p><img src="/../../images/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/image-20220320112458296.png" alt="image-20220320112458296"></p><ul><li>下面的是我的桥接配置</li></ul><p><img src="/../../images/adb%E8%BF%9E%E6%8E%A5%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%BF%AE%E6%94%B9hosts/image-20220320112655602.png" alt="image-20220320112655602"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>2021年4月22日17:27:23</p><p>今日重新配置了一遍,发现了几个问题</p><ol><li>我下载下来的hosts修改完以后(我这边修改了两行分别是</li></ol><p>127.0.0.1 aa.com </p><p>127.0.0.1 bb.com</p><p>结果aa.com可以访问到本地,bb不可以,然后我又加了一行cc.com.bb才可以访问.好像是最后一行最好需要回车一下要不然上传到模拟器以后格式会出现问题)</p><ol start="2"><li>修改完以后电脑最好重启一下</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 网络 </category>
          
          <category> 雷电模拟器 </category>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 雷电模拟器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/18/hello-world/"/>
      <url>/2022/03/18/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="你好，世界！"><a href="#你好，世界！" class="headerlink" title="你好，世界！"></a>你好，世界！</h1><p>[Hello world!]</p><p>​—–2022年3月18日00:28:02</p><hr><p>Todo：</p><ul><li><input disabled="" type="checkbox"> SqlSugar ORM - BlogCore</li><li><input disabled="" type="checkbox"> 根据Models生成表</li><li><input disabled="" type="checkbox"> 根据表生成Models</li><li><input disabled="" type="checkbox"> 生成三层</li></ul><hr><h2 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h2><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"> <span class="string">title</span><span class="comment">#【必需】页面标题</span></span><br><span class="line"> <span class="string">date</span><span class="comment">#【必需】页面创建日期</span></span><br><span class="line"> <span class="string">type</span><span class="comment">#【必需】标籤、分类和友情链接三个页面需要配置</span></span><br><span class="line"> <span class="string">updated</span><span class="comment">#【可选】页面更新日期</span></span><br><span class="line"> <span class="string">description</span><span class="comment">#【可选】页面描述</span></span><br><span class="line"> <span class="string">keywords</span><span class="comment">#【可选】页面关键字</span></span><br><span class="line"> <span class="string">comments</span><span class="comment">#【可选】显示页面评论模块(默认 true)</span></span><br><span class="line"> <span class="string">top_img</span><span class="comment">#【可选】页面顶部图片</span></span><br><span class="line"> <span class="string">mathjax</span><span class="string">【#可选】显示mathjax(当设置mathjax的per_page:</span> <span class="literal">false</span><span class="string">时，才需要配置，默认</span> <span class="literal">false</span><span class="string">)</span></span><br><span class="line"> <span class="string">katex</span><span class="comment">#【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</span></span><br><span class="line"> <span class="string">aside</span><span class="comment">#【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"> <span class="string">aplayer</span><span class="comment">#【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</span></span><br><span class="line"> <span class="string">highlight_shrink</span><span class="comment">#【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"> <span class="string">title</span><span class="comment">#【必需】文章标题</span></span><br><span class="line"> <span class="string">date</span><span class="comment">#【必需】文章创建日期</span></span><br><span class="line"> <span class="string">updated</span><span class="comment">#【可选】文章更新日期</span></span><br><span class="line"> <span class="string">tags</span><span class="comment">#【可选】文章标籤</span></span><br><span class="line"> <span class="string">sticky</span> <span class="comment"># 权重越大级别越高</span></span><br><span class="line"> <span class="string">categories</span><span class="comment">#【可选】文章分类</span></span><br><span class="line"> <span class="string">keywords</span><span class="comment">#【可选】文章关键字</span></span><br><span class="line"> <span class="string">description</span><span class="comment">#【可选】文章描述</span></span><br><span class="line"> <span class="string">top_img</span><span class="comment">#【可选】文章顶部图片</span></span><br><span class="line"> <span class="string">cover</span><span class="comment">#【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</span></span><br><span class="line"> <span class="string">comments</span><span class="comment">#【可选】显示文章评论模块(默认 true)</span></span><br><span class="line"> <span class="string">toc</span><span class="comment">#【可选】显示文章TOC(默认为设置中toc的enable配置)</span></span><br><span class="line"> <span class="string">toc_number</span><span class="comment">#【可选】显示toc_number(默认为设置中toc的number配置)</span></span><br><span class="line"> <span class="string">toc_style_simple</span><span class="comment">#【可选】显示 toc 简洁模式</span></span><br><span class="line"> <span class="string">copyright</span><span class="comment">#【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</span></span><br><span class="line"> <span class="string">copyright_author</span><span class="comment">#【可选】文章版权模块的文章作者</span></span><br><span class="line"> <span class="string">copyright_author_href</span><span class="comment">#【可选】文章版权模块的文章作者链接</span></span><br><span class="line"> <span class="string">copyright_url</span><span class="comment">#【可选】文章版权模块的文章连结链接</span></span><br><span class="line"> <span class="string">copyright_info</span><span class="comment">#【可选】文章版权模块的版权声明文字</span></span><br><span class="line"> <span class="string">mathjax</span><span class="comment">#【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</span></span><br><span class="line"> <span class="string">katex</span><span class="comment">#【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</span></span><br><span class="line"> <span class="string">aplayer</span><span class="comment">#【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</span></span><br><span class="line"> <span class="string">highlight_shrink</span><span class="comment">#【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</span></span><br><span class="line"> <span class="string">aside</span><span class="comment">#【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="自用"><a href="#自用" class="headerlink" title="自用"></a>自用</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span><span class="comment">#【必需】文章标题</span></span><br><span class="line"><span class="attr">date:</span><span class="comment">#【必需】文章创建日期</span></span><br><span class="line"><span class="attr">updated:</span><span class="comment">#【可选】文章更新日期</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">XXX</span>,<span class="string">XXX</span>]<span class="comment">#【可选】文章标籤</span></span><br><span class="line"><span class="attr">categories:</span><span class="comment">#【可选】文章分类</span></span><br><span class="line"> <span class="bullet">-</span> [<span class="string">XXX</span>,<span class="string">XXX</span>]</span><br><span class="line"> <span class="bullet">-</span> [<span class="string">XXX</span>,<span class="string">XXX</span>]</span><br><span class="line"><span class="attr">keywords:</span><span class="comment">#【可选】文章关键字</span></span><br><span class="line"><span class="attr">description:</span><span class="comment">#【可选】文章描述</span></span><br><span class="line"><span class="attr">top_img:</span><span class="comment">#【可选】文章顶部图片</span></span><br><span class="line"><span class="attr">cover:</span> <span class="literal">false</span><span class="comment">#【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 默认 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初始 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
